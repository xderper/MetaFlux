#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –∏ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ VPS
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: bash clean-rebuild.sh

set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É –∏ –ø–µ—Ä–µ—Å–±–æ—Ä–∫—É –ø—Ä–æ–µ–∫—Ç–∞..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ü–≤–µ—Ç–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

# 1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
print_status "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker stop $(docker ps -aq) 2>/dev/null || print_warning "–ù–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"

# 2. –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
print_status "–£–¥–∞–ª—è–µ–º –≤—Å–µ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker rm $(docker ps -aq) 2>/dev/null || print_warning "–ù–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"

# 3. –£–¥–∞–ª–µ–Ω–∏–µ Docker –æ–±—Ä–∞–∑–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
print_status "–£–¥–∞–ª—è–µ–º Docker –æ–±—Ä–∞–∑—ã –ø—Ä–æ–µ–∫—Ç–∞..."
docker images | grep -E "(5|metaflux|none)" | awk '{print $3}' | xargs docker rmi -f 2>/dev/null || print_warning "–ù–µ—Ç –æ–±—Ä–∞–∑–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"

# 4. –û—á–∏—Å—Ç–∫–∞ Docker volumes
print_status "–û—á–∏—â–∞–µ–º Docker volumes..."
docker volume prune -f

# 5. –û—á–∏—Å—Ç–∫–∞ Docker networks
print_status "–û—á–∏—â–∞–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ Docker networks..."
docker network prune -f

# 6. –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ Docker —Å–∏—Å—Ç–µ–º—ã
print_status "–í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É Docker —Å–∏—Å—Ç–µ–º—ã..."
docker system prune -af --volumes

# 7. –û—á–∏—Å—Ç–∫–∞ npm –∫–µ—à–∞
print_status "–û—á–∏—â–∞–µ–º npm –∫–µ—à..."
npm cache clean --force 2>/dev/null || print_warning "npm –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –∫–µ—à —É–∂–µ —á–∏—Å—Ç"

# 8. –£–¥–∞–ª–µ–Ω–∏–µ node_modules –∏ package-lock.json
print_status "–£–¥–∞–ª—è–µ–º node_modules –∏ package-lock.json..."
rm -rf node_modules
rm -f package-lock.json

# 9. –û—á–∏—Å—Ç–∫–∞ Next.js –∫–µ—à–∞
print_status "–û—á–∏—â–∞–µ–º –∫–µ—à Next.js..."
rm -rf .next
rm -rf out

# 10. –û—á–∏—Å—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –∫–µ—à–µ–π
print_status "–û—á–∏—â–∞–µ–º –¥—Ä—É–≥–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã..."
rm -rf .cache
rm -rf dist
rm -rf build

# 11. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∑–∞–Ω–æ–≤–æ
print_status "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∑–∞–Ω–æ–≤–æ..."
npm install

# 12. –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤ –∑–∞–Ω–æ–≤–æ
print_status "–°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑—ã –∑–∞–Ω–æ–≤–æ..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–æ–π docker-compose —Ñ–∞–π–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
if [ -f "docker-compose.prod.yml" ]; then
    print_status "–ò—Å–ø–æ–ª—å–∑—É–µ–º production –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
    docker-compose -f docker-compose.prod.yml build --no-cache
    print_status "–ó–∞–ø—É—Å–∫–∞–µ–º production –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    docker-compose -f docker-compose.prod.yml up -d
elif [ -f "docker-compose.simple.yml" ]; then
    print_status "–ò—Å–ø–æ–ª—å–∑—É–µ–º simple –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
    docker-compose -f docker-compose.simple.yml build --no-cache
    print_status "–ó–∞–ø—É—Å–∫–∞–µ–º simple –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    docker-compose -f docker-compose.simple.yml up -d
elif [ -f "docker-compose.yml" ]; then
    print_status "–ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
    docker-compose build --no-cache
    print_status "–ó–∞–ø—É—Å–∫–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    docker-compose up -d
else
    print_error "–ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª docker-compose!"
    exit 1
fi

# 13. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
sleep 10
docker ps

# 14. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏
print_status "–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏..."
docker-compose logs --tail=50

# 15. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞
print_status "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ..."
df -h

print_success "‚úÖ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∏ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
print_success "üîó –ü—Ä–æ–µ–∫—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω–æ–º—É –∞–¥—Ä–µ—Å—É"

echo ""
echo "üìã –ß—Ç–æ –±—ã–ª–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ:"
echo "   ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤—Å–µ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
echo "   ‚Ä¢ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ –æ–±—Ä–∞–∑—ã"
echo "   ‚Ä¢ –û—á–∏—â–µ–Ω—ã volumes –∏ networks"
echo "   ‚Ä¢ –û—á–∏—â–µ–Ω npm –∫–µ—à"
echo "   ‚Ä¢ –£–¥–∞–ª–µ–Ω—ã node_modules –∏ .next"
echo "   ‚Ä¢ –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
echo "   ‚Ä¢ –ü–µ—Ä–µ—Å–æ–±—Ä–∞–Ω—ã Docker –æ–±—Ä–∞–∑—ã –±–µ–∑ –∫–µ—à–∞"
echo "   ‚Ä¢ –ó–∞–ø—É—â–µ–Ω—ã –Ω–æ–≤—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
echo ""
echo "üí° –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤: docker-compose logs -f"
echo "üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: docker-compose down" 